version: '3.8'

x-kafaka_template: &kafka_template
  image: apache/kafka:3.7.0
  networks:
    - backend

x-kafka_env: &kafka_env
  KAFKA_PROCESS_ROLES: 'broker,controller'
  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
  KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093'
  KAFKA_LISTENERS: 'PLAINTEXT://:19092,CONTROLLER://:9093,PLAINTEXT_HOST://:9092'
  KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
  KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
  CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  KAFKA_LOG_DIRS: '/var/lib/kafka/data'
---

networks:
  backend:

volumes:
  kafka-1-data:
  kafka-2-data:
  kafka-3-data:

services:
  init-kafka:
    <<: *kafka_template
    container_name: init-kafka
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    volumes:
      - "./create-topics.sh:/create-topics.sh"
    command: "sh -c '/create-topics.sh'"

  kafka-1:
    <<: *kafka_template
    container_name: kafka-1
    hostname: kafka-1
    ports:
      - 29092:9092
    environment:
      <<: *kafka_env
      KAFKA_NODE_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:19092,PLAINTEXT_HOST://localhost:29092
    volumes:
      - kafka-1-data:/var/lib/kafka/data

  kafka-2:
    <<: *kafka_template
    container_name: kafka-2
    hostname: kafka-2
    ports:
      - 39092:9092
    environment:
      <<: *kafka_env
      KAFKA_NODE_ID: 2
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:19092,PLAINTEXT_HOST://localhost:39092
    volumes:
      - kafka-2-data:/var/lib/kafka/data

  kafka-3:
    <<: *kafka_template
    container_name: kafka-3
    hostname: kafka-3
    ports:
      - 49092:9092
    environment:
      <<: *kafka_env
      KAFKA_NODE_ID: 3
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:19092,PLAINTEXT_HOST://localhost:49092
    volumes:
      - kafka-3-data:/var/lib/kafka/data

  apicurio:
    image: apicurio/apicurio-registry-kafkasql:2.5.8.Final
    container_name: apicurio
    ports:
      - 8081:8080
    environment:
      KAFKA_BOOTSTRAP_SERVERS: 'kafka-1:19092'
    networks:
      - backend
